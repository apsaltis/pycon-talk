<[autotemplate]
documentclass={beamer}
usepackage={listings}
usepackage={wasysym}
usepackage={graphicx}
date={\today}
lstdefinestyle={basic}{....}
titleframe=True
title={Scrape the Web}
subtitle={Strategies for programming websites that don't expect it}
author={Asheesh Laroia asheesh@asheesh.org}
[autotemplate]>

==== This is supposed to be practice ====

* <1->But there are things I know I'll have to fix
* <2->More graphs and diagrams
** <3->But which ones?
* <4->Better presentation style (sorry!)

==== So please do interrupt me ====

==== ...and we begin ====

==== Welcome ====

==== Meta ====

*<1->You will learn neat tricks
*<2->DO NOT BECOME AN EVIL COMMENT SPAMMER
*<3->Theory and running code
*<4->Brittle? Sometimes.
*<5->The comics aren't mine; ask for references.

==== Things you'll need ====

* Sample code: http://FIXME.com
* Install FireBug
* Install python-lxml if it is easy

==== Pacing ====

* <1->Slow me down,
* <2->or speed me up.
* <2->With your voice, or by raising your hand.

==== What is web scraping? ====

Generally speaking,

* <1->You retrieve some data from the web,
* <2->You extract some information,
* <3->and optionally you repeat.

==== Perspectives on scraping ====

* <1->One page vs. a whole site
* <2->A site's contents now, or for the future as well

====  ====

(1) Diving in with curry

==== ====

<<<curry.jpg,width=4.5in>>>

==== Lunchtime ====

* <1-> http://mehfilindian.com/LunchMenuTakeOut.htm
* <2-> A question
** <3-> is there eggplant today?

==== From python ====

examples/curry/trivial.py

==== ====

(2) HTML: Structured text on the web

==== Two easy ways to read HTML ====

In a browser:

* <1->View source
* <2->Inspect element (requires Firebug or DOM Inspector)

==== HTML vs. XHTML ====

* <1-> Both are trees of tags
* <2-> HTML: from 1992
* <3-> XHTML: from 2000
* <4-> ...did XHTML win?

==== Stats pop quiz: size and type ====

(Stats from the MAMA survey published by Opera,
http://dev.opera.com/articles/view/mama-key-findings/.)

* <1->Average page size?
** <2-> 16.5K
*<3-> HTML to XHTML ratio?
**<4-> 2:1

==== Stats pop quiz: quirks and tags (pt. 1) ====

* <1->Transitional vs. Strict+Framset?
** <2->10:1
* <3->How many pages render in "Quirks" mode?
** <4->85 percent
* <5->What percent validate?
** <6->4.13 percent

==== Stats pop quiz: quirks and tags (pt. 2) ====

* <1->What's more popular? TITLE or BODY?
** <2->TITLE
* <3->What percent of web pages with validations badges actually validate?
** <4-> about 50 percent
* The web is a mess

==== ====

(3) Parsing "HTML" in Python

==== Things to consider ====

*<1-> What does a parser do with invalid HTML?
*<2-> Does it handle XHTML properly?
**<3-> They all do; don't worry.
*<4-> examples/parsing/ has samples.
*<5->Performance

==== A showcase of some options ====

* HTMLParser (stdlib!)
* xml.dom.minidom (stdlib!)
* <2->BeautifulSoup
* <2->html5lib
* <2->lxml.html

==== ====

(4) On regular expressions

==== ====

* Some people, when confronted with a problem, think\\
"I know, I'll use regular expressions."\\
Now they have two problems.

==== But why? ====

* <a href='/whatever'>
* <a href="/whatever/">
* <a href='/whatever/">





==== Trivia.. ====

*<1-> (Sophia)  1. Neon Genesis Evangelion: Who does Kaji really work for?
*<2-> (Sophia)  Here's your hint, answer space: \--\--\--\--\--\--\--\-- \--\--\--\--\--\--\--\--\--\--
*<3-> (Sophia)  Here's your 1st hint, answer space: \--\--\--\--\--\--\--\-- \--\--\--\--\--\--\--\--\--\--
*<4-> (Sophia)  Here's your 2nd hint, Japan\--\--\-- Gove\--\--\--\--\--\--
*<5-> (Sophia)  Here's your 3rd hint, Japanes\-- Govern\--\--\--\--

==== Trivia... ====

*<1-> (Sophia)  Here's your 3rd hint, Japanes\-- Govern\--\--\--\--
*<2-> (pizzaIS4breakfast)       janese governers
*<3-> (pizzaIS4breakfast)       janese governors
*<4-> (pizzaIS4breakfast)       japanese governors
*<5-> (pizzaIS4breakfast)       japanese government
*<6-> (Sophia)  Baka pizzaIS4breakfast got the answer: Japanese Government in 56 seconds. Points: 1 Rank: 36th

==== ====

<<<robot.jpg,width=4.5in>>>

*<2-> (Sophia)  Here's your 3rd hint, Japanes\-- Govern\--\--\--\--
*<3-> (pizzaIS4breakfast)       japanese government

==== How to mock your friends (with Python) ====

*<1->Store logs of the channel
*<2->Extract a list of answers
*<3->Join the channel with X-Chat
*<4->Enable my plugin, which looks things up in the list of old answers
*<5->Laugh all the way to the ...

==== Thanks ====

asheesh@asheesh.org

